{"version":3,"file":"main.58f58bc5077e3906724d.bundle.js","sources":["webpack:///./src/components/Forms/Life/PutCredentialsForm/PutCredentialsForm.tsx"],"sourcesContent":["import {\n  Field,\n  FieldProps,\n  Form,\n  Formik,\n  FormikHelpers,\n  FormikProps,\n} from 'formik'\nimport React from 'react'\nimport * as Yup from 'yup'\nimport { Props } from './PutCredentialsForm.container'\nimport { Button, EIconType } from '../../../Button'\nimport { i18n } from '../../../../constants/i18n'\n\nconst initialValues = {\n  clientId: '',\n  clientSecret: '',\n}\n\nconst validationSchema = Yup.object().shape({\n  clientId: Yup.string().required(),\n  clientSecret: Yup.string().required(),\n})\n\ninterface IFormValues {\n  clientId: string\n  clientSecret: string\n}\n\nexport class PutCredentialsForm extends React.Component<Props> {\n  render() {\n    const { onSubmit, putCredentials } = this.props\n    return (\n      <Formik\n        initialValues={initialValues}\n        validationSchema={validationSchema}\n        onSubmit={(\n          values: IFormValues,\n          actions: FormikHelpers<IFormValues>\n        ) => {\n          if (onSubmit) {\n            onSubmit(values)\n          }\n          putCredentials(values)\n          actions.setSubmitting(false)\n        }}\n      >\n        {(formikBag: FormikProps<IFormValues>) => (\n          <Form className=\"max-w-xl m-2\">\n            <p className=\"mt-4 text-gray-800 font-medium\">{i18n.CREDENTIALS}</p>\n\n            <Field name=\"clientId\">\n              {({ field, form }: FieldProps) => (\n                <div className=\"mt-4 ml-4\">\n                  <label\n                    className=\"block text-sm text-gray-600\"\n                    htmlFor=\"clientId\"\n                  >\n                    clientId\n                  </label>\n                  <input\n                    {...field}\n                    className={`mt-2 w-full px-5 py-2 text-gray-700 bg-gray-200 rounded${\n                      form.errors.clientId ? ' border border-red-600' : ''\n                    }`}\n                    type=\"text\"\n                    placeholder={`${i18n.ACTION_EXAMPLE} ${i18n.CREDENTIALS_PLACEHOLDER}`}\n                  />\n                </div>\n              )}\n            </Field>\n\n            <Field name=\"clientSecret\">\n              {({ field, form }: FieldProps) => (\n                <div className=\"mt-4 ml-4\">\n                  <label\n                    className=\"block text-sm text-gray-600\"\n                    htmlFor=\"clientSecret\"\n                  >\n                    clientSecret\n                  </label>\n                  <input\n                    {...field}\n                    className={`mt-2 w-full px-5 py-2 text-gray-700 bg-gray-200 rounded${\n                      form.errors.clientId ? ' border border-red-600' : ''\n                    }`}\n                    type=\"text\"\n                    placeholder={`${i18n.ACTION_EXAMPLE} ${i18n.CREDENTIALS_PLACEHOLDER}`}\n                  />\n                </div>\n              )}\n            </Field>\n\n            <div className=\"mt-4\">\n              <div className=\"flex justify-end\">\n                <Button disabled={true} label=\"Reset\" />\n                <Button\n                  className=\"ml-2\"\n                  hasError={!!Object.keys(formikBag.errors).length}\n                  iconType={EIconType.ARROW_RIGHT}\n                  label={i18n.SEND}\n                  type=\"submit\"\n                />\n              </div>\n            </div>\n          </Form>\n        )}\n      </Formik>\n    )\n  }\n}\n"],"mappings":"AAcA","sourceRoot":""}